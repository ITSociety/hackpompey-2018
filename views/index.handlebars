<link rel="stylesheet" href="css/main.css">
<div id="particles">
  <div class="space">
    <div class="stats-container white-border">
      <span class="title">Stats ðŸ“ˆ</span>
      <div class="totals">Total ðŸ‘ª P/S:
        <span class="meatsacks-ps-total">0.00</span>
      </div>
      <div class="totals">Total ðŸ¤‘ P/S:
        <span class="currency-ps-total">0.00</span>
      </div>
    </div>
    <div class="main-container">
      <h2>Planet: ITSociety</h2>
      <div class="title">Total ðŸ‘ª:
        <span class="meatsacks-total">0</span>
      </div>
      <div class="title">Total ðŸ¤‘:
        <span class="currency-total">0</span>
      </div>
      <div class="planet-container">
        <div class="planet pulse">
          <img src="http://localhost:8080/images/planet.png">
        </div>
      </div>
    </div>
    <div class="unlock-container white-border">
      <span class="title">Unlocks ðŸ”“</span>
      <div class="unlocks"></div>
    </div>
  </div>
</div>

<div class="devbox">
  <div class="reset">reset</div>
  <div class="add-100"></div>
  <div class="add-1000"></div>
</div>
<script>
  const totalPeople = document.querySelector('.meatsacks-total');
  const totalMoney = document.querySelector('.currency-total');
  
 
  const totalPeoplePS = document.querySelector('.meatsacks-ps-total');
  const totalMoneyPS = document.querySelector('.currency-ps-total');
  
  const planet = document.querySelector('.planet');

  const reset = document.querySelector('.reset');

  const addH = document.querySelector('.add-100');
  const addT = document.querySelector('.add-1000');

  const unlocks = document.querySelector('.unlocks');
  
  let peopleCount = 1;
  let moneyCount = 0;
  let peoplePerSecond = 0;
  let moneyPerSecond = 0;
  

  // some unlockable:
  /** { 
    title: 'sex', 
    description: '', 
    humansRequired: 2, 
    humansCost: 0,
    currencyCost: 0, 
    humansPerSecond: 1, 
    currencyPerSecond: 0,
    humanMultiplier: 1,
    currencyMultiplier: 1,
  }
  */

  const allUnlocks = [];
  let availableUnlocks = []
  const unlocked = []


  planet.addEventListener('click', (ev) => {
    ev.preventDefault();
    peopleCount += 1;
    if(moneyPerSecond > 0) {
      moneyCount += 1;
    }
    totalPeople.textContent = Math.floor(peopleCount);
    totalMoney.textContent = Math.floor(moneyCount);
  })

  reset.addEventListener('click', (ev) => {
      ev.preventDefault();
      peopleCount = 1;
      moneyCount = 0;
      peoplePerSecond = 0;
      moneyPerSecond = 0;
      save();
      setTimeout(() => {
        window.innerHTML = "";
        location.reload();
      }, 500)
    })

  addH.addEventListener('click', ev => {
    ev.preventDefault();
    peopleCount += 100;
    save();
  });

  addT.addEventListener('click', ev => {
    ev.preventDefault();
    peopleCount += 1000;
    save();
  });

  // Add currency per second to our bank
  function main() {
    console.log(peoplePerSecond);
    peopleCount += peoplePerSecond;
    moneyCount += moneyPerSecond;
  

    totalPeople.textContent = Math.floor(peopleCount);
    totalMoney.textContent = Math.floor(moneyCount);

    totalPeoplePS.textContent = Number.parseFloat(peoplePerSecond).toFixed(2);
    totalMoneyPS.textContent = Number.parseFloat(moneyPerSecond).toFixed(2);

    save();
    generateAvailableUnlocks()
  }

  // add our clicks to our bank
  function generateAvailableUnlocks() {
    const elements = getUnlocksDomList(allUnlocks.filter(unlock => -1 == unlocked.indexOf(unlock.id)).filter(unlock => peopleCount >= unlock.peoplerequired && moneyCount >= unlock.currencyrequired)).splice(0,5);

    if(elements.length !== unlocks.childNodes.length) {
      unlocks.innerHTML = "";
      elements.forEach(unlock => unlocks.appendChild(unlock));
    }
  }

  function h(args, text, classList='') {
    const elem = document.createElement(args);
    elem.classList = classList;
    elem.textContent = text;
    return elem;
  };

  function unlockElement(elem) {  
      peoplePerSecond = parseFloat(peoplePerSecond) + parseFloat(elem.dataset.peoplemultiplier);
      moneyPerSecond = moneyPerSecond + parseFloat(elem.dataset.currencymultiplier);

      console.log(elem.dataset.peoplemultiplier);
      console.log(peoplePerSecond, moneyPerSecond);

      unlocked.push(parseInt(elem.dataset.id,10));
      elem.remove();
  }

  const getUnlocksDomList = (a, locked = false) => a
    .map(unlock => {
      const outer = h('div', '', `unlock white-border ${locked ? 'locked' : 'unlocked'}`);
      const nameDOM = h('span', unlock.title, 'unlock-name');
      const descDOM = h('div', unlock.description, 'unlock-desc');
      const costDOM = h('span', 'ðŸ¤‘: ' + unlock.currencycost, 'unlock-cost');
      const peopleMultiDOM = h('span', ' ðŸ‘ª multiplier: ' + unlock.peoplemultiplier, 'unlock-cost');
      //const costDOM = h('span', 'cost: ' + unlock.currencycost, 'unlock-cost');
      [nameDOM, descDOM, costDOM, peopleMultiDOM].forEach(elem => outer.appendChild(elem));
      Object.keys(unlock).forEach(key => outer.dataset[key] = unlock[key]);
      outer.addEventListener('click', () => unlockElement(outer));
      return outer;      
    });

  // unlock things and change our currencyPerSecond or humans/s
  function unlock() {

  }

  function save() {
    localStorage.setItem(
      'stats',
      // globals
      JSON.stringify({ 
        moneyPerSecond, 
        peoplePerSecond,
        peopleCount, 
        moneyCount, 
      })
    );
  }

  function load() {
    const saved = JSON.parse(localStorage.getItem('stats'));
    if (!saved) return;
    console.log('loading data:', { saved });
    peopleCount = saved.peopleCount;
    currencyPerSecond = saved.currencyPerSecond;
    moneyCount = saved.moneyCount;
    peoplePerSecond = saved.peoplePerSecond;
  }
  
  let interval;
  window.onload = () => {
    load();
    main();
    setInterval(main, 500);
  }

  socket.on('unlocks', (rows) => {
      const parsed = JSON.parse(rows);
      allUnlocks.length = 0;
      console.log({ ...parsed })
      allUnlocks.push(...parsed);
    });
</script>

<script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
<script>
  particlesJS("particles", {
    "particles": {
      "number": {
        "value": 355,
        "density": {
          "enable": true,
          "value_area": 789.1476416322727
        }
      },
      "color": {
        "value": "#ffffff"
      },
      "shape": {
        "type": "circle",
        "stroke": {
          "width": 0,
          "color": "#000000"
        },
        "polygon": {
          "nb_sides": 5
        },
        "image": {
          "src": "img/github.svg",
          "width": 100,
          "height": 100
        }
      },
      "opacity": {
        "value": 0.48927153781200905,
        "random": false,
        "anim": {
          "enable": true,
          "speed": 0.2,
          "opacity_min": 0,
          "sync": false
        }
      },
      "size": {
        "value": 2,
        "random": true,
        "anim": {
          "enable": true,
          "speed": 2,
          "size_min": 0,
          "sync": false
        }
      },
      "line_linked": {
        "enable": false,
        "distance": 150,
        "color": "#ffffff",
        "opacity": 0.4,
        "width": 1
      },
      "move": {
        "enable": true,
        "speed": 0.2,
        "direction": "none",
        "random": true,
        "straight": false,
        "out_mode": "out",
        "bounce": false,
        "attract": {
          "enable": false,
          "rotateX": 600,
          "rotateY": 1200
        }
      }
    },
    "interactivity": {
      "detect_on": "canvas",
      "events": {
        "onhover": {
          "enable": true,
          "mode": "bubble"
        },
        "onclick": {
          "enable": true,
          "mode": "push"
        },
        "resize": true
      },
      "modes": {
        "grab": {
          "distance": 400,
          "line_linked": {
            "opacity": 1
          }
        },
        "bubble": {
          "distance": 83.91608391608392,
          "size": 1,
          "duration": 3,
          "opacity": 1,
          "speed": 3
        },
        "repulse": {
          "distance": 200,
          "duration": 0.4
        },
        "push": {
          "particles_nb": 4
        },
        "remove": {
          "particles_nb": 2
        }
      }
    },
    "retina_detect": true
  });
</script>

